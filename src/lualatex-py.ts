import path from 'node:path';
import { execaSync } from 'execa';
import { program } from 'commander';

program
	.showHelpAfterError()
	.argument('<file>', 'full path to latex file')
	.option('--output-directory <dir>');

const cli = program.parse();
const latexFileFullPath = cli.args[0]!;
const outputDirectoryName = cli.opts()['output-directory'] as string;

const execaOptions = { stdio: 'inherit' } as const;
execaSync(
	'lualatex',
	[
		'--shell-escape',
		'--enable-write18',
		'-synctex=1',
		'-interaction=nonstopmode',
		'-file-line-error',
		'-output-directory=out',
		latexFileFullPath,
	],
	execaOptions
);

const workingDir = path.dirname(latexFileFullPath);
const outDir = path.resolve(workingDir, outputDirectoryName);
const filename = path.basename(latexFileFullPath, '.tex');

// Cleans the old artifacts generated by pythontex
execaSync(
	'rm',
	[
		'-rf',
		`${outDir}/pythontex-files-${filename}`,
		`${outDir}/${filename}.pytxcode`,
	],
	execaOptions
);

execaSync('pythontex', [`${outDir}/${filename}.tex`], execaOptions);

execaSync('cp', [`${filename}.tex`, `${outDir}/${filename}.tex`], execaOptions);

execaSync(
	'lualatex',
	[
		'--shell-escape',
		'--enable-write18',
		'-synctex=1',
		'-interaction=nonstopmode',
		'-file-line-error',
		'-output-directory=out',
		`${outDir}/${filename}.tex`,
	],
	execaOptions
);
